<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ModernTerminal">
  <FontFamily x:Key="FiraCodeRetina">pack://application:,,,/Fonts/FiraCode-Retina.ttf#Fira Code Retina</FontFamily>

  <local:BooleanToStringConverter x:Key="BooleanToStringConverter" />

  <!--Colors-->
  <SolidColorBrush x:Key="ForegroundColor" Color="#A0A0A0" />
  <Color x:Key="ForegroundHighlightColor">#404040</Color>
  <SolidColorBrush x:Key="HighlightLineColor" Color="#0062E2" />
  <SolidColorBrush x:Key="PopupBackground" Color="#F0555555" />
  <Color x:Key="HighlightColor">#20FFFFFF</Color>

  <!-- FocusVisual -->

  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="2" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Button -->
  <Style TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
    <!--<Setter Property="MinHeight" Value="23" />-->
    <!--<Setter Property="MinWidth" Value="75" />-->
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <Border x:Name="Border" TextBlock.Foreground="{TemplateBinding Foreground}"
                  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}" />
            <ContentPresenter Margin="{TemplateBinding Padding}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            <Border x:Name="Highlight" Background="#00FFFFFF" BorderThickness="0" />

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.25" />
                  <VisualTransition GeneratedDuration="0" To="Pressed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="Highlight">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="Highlight">
                      <EasingColorKeyFrame KeyTime="0" Value="#20000000" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <!-- TODO -->
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <!--
            <Trigger Property="IsDefault" Value="true">
              <Setter TargetName="Border" Property="BorderBrush">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}" Offset="0.0" />
                        <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}" Offset="1.0" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            -->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TitleBarButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Width" Value="34" />
    <Setter Property="Height" Value="28" />
    <Setter Property="Focusable" Value="False" />
  </Style>
  <Style x:Key="TitleBarButtonWithText" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Height" Value="28" />
    <Setter Property="Focusable" Value="False" />
  </Style>

  <Style x:Key="TextBoxWithoutHighlight" TargetType="{x:Type TextBox}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="AllowDrop" Value="true" />
    <Setter Property="CaretBrush" Value="{StaticResource ForegroundColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border Name="Border" Padding="{TemplateBinding Padding}" 
                  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
                <VisualState x:Name="ReadOnly" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer Margin="{TemplateBinding Padding}" x:Name="PART_ContentHost" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <CircleEase x:Key="UnderlineEasingFunction" EasingMode="EaseOut"/>
  <Style TargetType="{x:Type local:Underline}">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:Underline}">
          <Rectangle Height="2" Fill="{StaticResource HighlightLineColor}"
                     IsHitTestVisible="False"
                     VerticalAlignment="Bottom" RenderTransformOrigin="0.5 0.5">
            <Rectangle.RenderTransform>
              <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="1" />
            </Rectangle.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Inactive" To="Active">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                       Storyboard.TargetProperty="ScaleX"
                                       Duration="0:0:0.3"
                                       EasingFunction="{StaticResource UnderlineEasingFunction}"
                                       To="1"/>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="Active" To="Inactive">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                       Storyboard.TargetProperty="ScaleX"
                                       Duration="0:0:0.3"
                                       EasingFunction="{StaticResource UnderlineEasingFunction}"
                                       To="0"/>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleX"
                                     Duration="0"
                                     To="1"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleX"
                                     Duration="0"
                                     To="0"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type TextBox}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="AllowDrop" Value="true" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="CaretBrush" Value="{StaticResource ForegroundColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Grid Name="Border" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.2" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
                <VisualState x:Name="ReadOnly" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="MouseOverUnderline" 
                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                    Duration="0:0:0.9"
                                    To="{StaticResource ForegroundHighlightColor}"/>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MouseOverUnderline"
                                                      Storyboard.TargetProperty="(Border.BorderThickness)">
                      <DiscreteThicknessKeyFrame KeyTime="0" Value="0 0 0 2" />
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer Margin="{TemplateBinding Padding}" x:Name="PART_ContentHost" />
            <Border x:Name="MouseOverUnderline" BorderThickness="0 0 0 1" 
                    VerticalAlignment="Bottom" BorderBrush="{StaticResource ForegroundColor}" />
            <local:Underline x:Name="Underline" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Underline" Property="IsActive" Value="True"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ButtonDropDown -->
  <Style TargetType="local:ButtonDropDown">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ButtonDropDown">
          <Grid>
            <Border x:Name="Border" TextBlock.Foreground="{TemplateBinding Foreground}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <Border x:Name="Highlight" Background="#00000000" BorderThickness="0" />
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
            <Popup x:Name="Popup" PopupAnimation="Fade" Placement="Bottom" AllowsTransparency="True" StaysOpen="False">
              <ContentPresenter Content="{TemplateBinding DropDownContent}" 
                                ContentTemplate="{TemplateBinding DropDownContentTemplate}" />
            </Popup>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.25" />
                  <VisualTransition GeneratedDuration="0" To="Pressed" />
                  <VisualTransition GeneratedDuration="0" To="Open" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="Highlight">
                      <EasingColorKeyFrame KeyTime="0" Value="#20FFFFFF" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="Highlight">
                      <EasingColorKeyFrame KeyTime="0" Value="#20000000" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Open">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="Highlight">
                      <EasingColorKeyFrame KeyTime="0" Value="#FF202020" />
                    </ColorAnimationUsingKeyFrames>
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                    Storyboard.TargetName="Popup">
                      <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                    </BooleanAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ComboBoxToggleButton"
                   TargetType="{x:Type ToggleButton}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="20" />
      </Grid.ColumnDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
          </VisualState>
          <VisualState x:Name="Pressed" />
          <VisualState x:Name="Disabled">
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckStates">
          <VisualState x:Name="Checked">
          </VisualState>
          <VisualState x:Name="Unchecked" />
          <VisualState x:Name="Indeterminate" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="Border" Grid.ColumnSpan="2" Background="#01000000"/>
      <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1"
            Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource ForegroundColor}" />
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
  </ControlTemplate>

  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.2" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
                <VisualState x:Name="MouseOver" >
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="MouseOverUnderline" 
                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                    Duration="0:0:0.9"
                                    To="{StaticResource ForegroundHighlightColor}"/>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MouseOverUnderline"
                                                      Storyboard.TargetProperty="(Border.BorderThickness)">
                      <DiscreteThicknessKeyFrame KeyTime="0" Value="0 0 0 2" />
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditStates">
                <VisualState x:Name="Editable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Storyboard.TargetName="PART_EditableTextBox">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Storyboard.TargetName="ContentSite">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Uneditable" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
                          Focusable="false" ClickMode="Press" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left">
            </ContentPresenter>
            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                     Template="{StaticResource ComboBoxTextBox}"
                     HorizontalAlignment="Left" VerticalAlignment="Bottom"
                     Margin="3,3,23,3" Focusable="True"
                     Background="Transparent" Visibility="Hidden"
                     IsReadOnly="{TemplateBinding IsReadOnly}" />
            <Border x:Name="MouseOverUnderline" VerticalAlignment="Bottom" IsHitTestVisible="False"
                    BorderThickness="0 0 0 1" BorderBrush="{StaticResource ForegroundColor}" />
            <local:Underline x:Name="Underline" />
            <Popup x:Name="Popup" Placement="Center"
                   IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"
                   Focusable="False" PopupAnimation="Fade">
              <Grid x:Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border x:Name="DropDownBorder" BorderThickness="1"
                        Background="{StaticResource PopupBackground}" BorderBrush="{StaticResource ForegroundColor}" CornerRadius="1">
                </Border>
                <ScrollViewer SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Underline" Property="IsActive" Value="True"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border x:Name="Border" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.15" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                  Storyboard.TargetName="Border">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- PagesView -->
  <Style TargetType="local:PagesView">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PagesView">
          <Grid Name="HostGrid">
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
















  <!--
  <Style TargetType="{x:Type TextBox}">
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
    <Setter Property="BorderThickness" Value="0 0 0 1"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Bottom"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" From="0" To="1" Duration="0:0:0.3">
                      <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" From="0" To="1" Duration="0:0:0.3">
                      <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" To="0" BeginTime="0:0:0.45" Duration="0" />
                    <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" To="0" BeginTime="0:0:0.45" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" To="0" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="#FF0000"
                                CornerRadius="0"
                                Visibility="Visible"
                                RenderTransformOrigin="0.5,0.5">
              <Border.RenderTransform>
                <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
              </Border.RenderTransform>
            </Border>
            <Border x:Name="textFieldBoxBorder"
                                CornerRadius="0"
                                SnapsToDevicePixels="True">
              <Grid>
                <Border x:Name="border"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="True"
                                        Padding="0">
                  <Grid x:Name="textFieldGrid"
                                          Margin="0"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          MinWidth="1">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                      />
                  </Grid>
                </Border>
                <Border x:Name="textFieldBoxBottomLine"
                                        Background="{TemplateBinding BorderBrush}"
                                        Height="0"
                                        CornerRadius="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        SnapsToDevicePixels="True" />
                <Line x:Name="DashedLine" VerticalAlignment="Bottom" Visibility="Collapsed"
                                      StrokeThickness="1.25" StrokeDashArray="1,2.5" StrokeDashCap="Round"
                                      X1="0" X2="{Binding ActualWidth, ElementName=border}" Y1="0" Y2="0" 
                                      Stroke="{TemplateBinding BorderBrush}" Opacity="0.56" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
          <Condition Property="IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  -->
</ResourceDictionary>